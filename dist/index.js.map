{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/digerati/skipToMainContent.ts", "../src/digerati/currentYear.ts", "../src/a7architecture/teamMemberModal.ts", "../src/digerati/setEqualHeight.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "/**\n * Skip to Main Content.\n * \n * @author <cabal@digerati.design>\n */\nexport const skipToMainContent = () => {\n    const trigger = document.querySelector('[dd-skip-to-main-content=\"trigger\"]'),\n        target = document.querySelector('[dd-skip-to-main-content=\"target\"]');\n    if (!trigger || !target) {\n        return;\n    }\n    ['click', 'keypress'].forEach((event) => {\n        trigger.addEventListener(event, (e) => {\n            if (e.type === 'keydown' && e.which !== 13) {\n                return;\n            }\n            e.preventDefault();\n            target.setAttribute('tabindex', '-1');\n            target.focus();\n        });\n    });\n};\n\n", "/**\n * Current Year.\n * \n * @author <cabal@digerati.design>\n */\nexport const currentYear = () => {\n    const target = document.querySelector('[dd-date=\"current-year\"]');\n    if (!target) {\n        return;\n    }\n    const fullYear = new Date().getFullYear();\n    target.innerText = fullYear.toString();\n};\n\n", "/**\n * Team Member Modal.\n * \n * Dynamically populate Team Member Modal\n * with CMS Collection Item Properties\n * from corresponding Team Member Item.\n * \n * @author <cabal@digerati.design>\n */\nexport const teamMemberModal = () => {\n    const showModalLinks = document.querySelectorAll('[dd-modal=\"show\"]'),\n        modal = document.querySelector('[dd-modal=\"modal\"]');\n    if (!showModalLinks || !modal) {\n        return;\n    }\n    showModalLinks.forEach((showModalLink) => {\n        showModalLink.addEventListener('click', () => {\n            let teamMember = showModalLink;\n            if (!teamMember) {\n                return false;\n            }\n            modal.querySelector(['[dd-modal=\"name\"]']).innerText = teamMember.querySelector('[dd-tm=\"name\"]').innerText;\n            modal.querySelector(['[dd-modal=\"qualification\"]']).innerText = teamMember.querySelector('[dd-tm=\"qualification\"]').innerText;\n            modal.querySelector(['[dd-modal=\"job-title\"]']).innerText = teamMember.querySelector('[dd-tm=\"job-title\"').innerText;\n            modal.querySelector(['[dd-modal=\"image\"]']).src = teamMember.querySelector('[dd-tm=\"image\"]').src;\n            modal.querySelector(['[dd-modal=\"email\"]']).href = teamMember.querySelector('[dd-tm=\"email\"]').href;\n            modal.querySelector(['[dd-modal=\"biography\"]']).innerHTML = teamMember.querySelector('[dd-tm=\"biography\"]').innerHTML;\n            modal.querySelector(['[dd-modal=\"fact-question\"]']).innerHTML = teamMember.querySelector('[dd-tm=\"fact-question\"]').innerHTML;\n            modal.querySelector(['[dd-modal=\"fact-answer\"]']).innerHTML = teamMember.querySelector('[dd-tm=\"fact-answer\"]').innerHTML;\n        }, { passive: true });\n    });\n};\n", "/**\n * Equal Height Setter.\n * \n * Adjusts the height of all slides with [dd-equal=\"height\"] to match the tallest slide.\n */\nexport const setEqualHeight = () => {\n    const selector = '[dd-equal=\"height\"]';\n\n    const adjustHeights = () => {\n        const slides = document.querySelectorAll<HTMLElement>(selector);\n        console.log(`Found ${slides.length} slides using selector \"${selector}\"`);\n\n        let maxHeight = 0;\n\n        // Reset all slides to their natural height before calculating the tallest slide\n        slides.forEach(slide => {\n            slide.style.height = '';\n            const slideHeight = slide.offsetHeight;\n            console.log(`Slide height: ${slideHeight}px`);\n            if (slideHeight > maxHeight) {\n                maxHeight = slideHeight;\n            }\n        });\n\n        console.log(`Tallest slide height determined: ${maxHeight}px`);\n\n        // Set all slides to the height of the tallest slide\n        slides.forEach(slide => {\n            slide.style.height = maxHeight + 'px';\n            console.log(`Setting slide height to ${maxHeight}px`);\n        });\n\n        console.log(`Adjusted slide heights to ${maxHeight}px`);\n    };\n\n    adjustHeights();\n    window.addEventListener('resize', adjustHeights);\n};\n\n// Observer logic to wait for the list to become empty before executing setEqualHeight\nconst targetSelector = '[fs-cmsslider-element=\"list\"]';\nconst targetNode = document.querySelector(targetSelector);\n\nif (targetNode) {\n    const config = { childList: true };\n    let hasExecuted = false; // Ensure setEqualHeight runs only once\n\n    const observerCallback = (mutationsList, observer) => {\n        // If not executed yet and the target element is empty\n        if (!hasExecuted && targetNode.children.length === 0) {\n            console.log(`${targetSelector} is empty. Executing setEqualHeight now.`);\n            setEqualHeight();\n\n            // Mark as executed and disconnect observer to prevent further calls\n            hasExecuted = true;\n            observer.disconnect();\n        }\n    };\n\n    const observer = new MutationObserver(observerCallback);\n    observer.observe(targetNode, config);\n} else {\n    console.warn(`Element with selector ${targetSelector} not found.`);\n}\n", "import { skipToMainContent } from \"$digerati/skipToMainContent\";\nimport { currentYear } from \"$digerati/currentYear\";\nimport { teamMemberModal } from \"$a7architecture/teamMemberModal\";\nimport { setEqualHeight } from \"$digerati/setEqualHeight\";\n\nwindow.Webflow || [];\nwindow.Webflow.push(() => {\n  skipToMainContent();\n  currentYear();\n  teamMemberModal();\n  setEqualHeight();\n});"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACKtF,MAAM,oBAAoB,MAAM;AACnC,UAAM,UAAU,SAAS,cAAc,qCAAqC,GACxE,SAAS,SAAS,cAAc,oCAAoC;AACxE,QAAI,CAAC,WAAW,CAAC,QAAQ;AACrB;AAAA,IACJ;AACA,KAAC,SAAS,UAAU,EAAE,QAAQ,CAAC,UAAU;AACrC,cAAQ,iBAAiB,OAAO,CAAC,MAAM;AACnC,YAAI,EAAE,SAAS,aAAa,EAAE,UAAU,IAAI;AACxC;AAAA,QACJ;AACA,UAAE,eAAe;AACjB,eAAO,aAAa,YAAY,IAAI;AACpC,eAAO,MAAM;AAAA,MACjB,CAAC;AAAA,IACL,CAAC;AAAA,EACL;;;AChBO,MAAM,cAAc,MAAM;AAC7B,UAAM,SAAS,SAAS,cAAc,0BAA0B;AAChE,QAAI,CAAC,QAAQ;AACT;AAAA,IACJ;AACA,UAAM,YAAW,oBAAI,KAAK,GAAE,YAAY;AACxC,WAAO,YAAY,SAAS,SAAS;AAAA,EACzC;;;ACHO,MAAM,kBAAkB,MAAM;AACjC,UAAM,iBAAiB,SAAS,iBAAiB,mBAAmB,GAChE,QAAQ,SAAS,cAAc,oBAAoB;AACvD,QAAI,CAAC,kBAAkB,CAAC,OAAO;AAC3B;AAAA,IACJ;AACA,mBAAe,QAAQ,CAAC,kBAAkB;AACtC,oBAAc,iBAAiB,SAAS,MAAM;AAC1C,YAAI,aAAa;AACjB,YAAI,CAAC,YAAY;AACb,iBAAO;AAAA,QACX;AACA,cAAM,cAAc,CAAC,mBAAmB,CAAC,EAAE,YAAY,WAAW,cAAc,gBAAgB,EAAE;AAClG,cAAM,cAAc,CAAC,4BAA4B,CAAC,EAAE,YAAY,WAAW,cAAc,yBAAyB,EAAE;AACpH,cAAM,cAAc,CAAC,wBAAwB,CAAC,EAAE,YAAY,WAAW,cAAc,oBAAoB,EAAE;AAC3G,cAAM,cAAc,CAAC,oBAAoB,CAAC,EAAE,MAAM,WAAW,cAAc,iBAAiB,EAAE;AAC9F,cAAM,cAAc,CAAC,oBAAoB,CAAC,EAAE,OAAO,WAAW,cAAc,iBAAiB,EAAE;AAC/F,cAAM,cAAc,CAAC,wBAAwB,CAAC,EAAE,YAAY,WAAW,cAAc,qBAAqB,EAAE;AAC5G,cAAM,cAAc,CAAC,4BAA4B,CAAC,EAAE,YAAY,WAAW,cAAc,yBAAyB,EAAE;AACpH,cAAM,cAAc,CAAC,0BAA0B,CAAC,EAAE,YAAY,WAAW,cAAc,uBAAuB,EAAE;AAAA,MACpH,GAAG,EAAE,SAAS,KAAK,CAAC;AAAA,IACxB,CAAC;AAAA,EACL;;;AC1BO,MAAM,iBAAiB,MAAM;AAChC,UAAM,WAAW;AAEjB,UAAM,gBAAgB,MAAM;AACxB,YAAM,SAAS,SAAS,iBAA8B,QAAQ;AAC9D,cAAQ,IAAI,SAAS,OAAO,MAAM,2BAA2B,QAAQ,GAAG;AAExE,UAAI,YAAY;AAGhB,aAAO,QAAQ,WAAS;AACpB,cAAM,MAAM,SAAS;AACrB,cAAM,cAAc,MAAM;AAC1B,gBAAQ,IAAI,iBAAiB,WAAW,IAAI;AAC5C,YAAI,cAAc,WAAW;AACzB,sBAAY;AAAA,QAChB;AAAA,MACJ,CAAC;AAED,cAAQ,IAAI,oCAAoC,SAAS,IAAI;AAG7D,aAAO,QAAQ,WAAS;AACpB,cAAM,MAAM,SAAS,YAAY;AACjC,gBAAQ,IAAI,2BAA2B,SAAS,IAAI;AAAA,MACxD,CAAC;AAED,cAAQ,IAAI,6BAA6B,SAAS,IAAI;AAAA,IAC1D;AAEA,kBAAc;AACd,WAAO,iBAAiB,UAAU,aAAa;AAAA,EACnD;AAGA,MAAM,iBAAiB;AACvB,MAAM,aAAa,SAAS,cAAc,cAAc;AAExD,MAAI,YAAY;AACZ,UAAM,SAAS,EAAE,WAAW,KAAK;AACjC,QAAI,cAAc;AAElB,UAAM,mBAAmB,CAAC,eAAeA,cAAa;AAElD,UAAI,CAAC,eAAe,WAAW,SAAS,WAAW,GAAG;AAClD,gBAAQ,IAAI,GAAG,cAAc,0CAA0C;AACvE,uBAAe;AAGf,sBAAc;AACd,QAAAA,UAAS,WAAW;AAAA,MACxB;AAAA,IACJ;AAEA,UAAM,WAAW,IAAI,iBAAiB,gBAAgB;AACtD,aAAS,QAAQ,YAAY,MAAM;AAAA,EACvC,OAAO;AACH,YAAQ,KAAK,yBAAyB,cAAc,aAAa;AAAA,EACrE;;;AC1DA,SAAO,WAAW,CAAC;AACnB,SAAO,QAAQ,KAAK,MAAM;AACxB,sBAAkB;AAClB,gBAAY;AACZ,oBAAgB;AAChB,mBAAe;AAAA,EACjB,CAAC;",
  "names": ["observer"]
}
